Compiling KiCad on Apple Mac OS X
=================================
 First written: 2010-01-31
 by: Jerry Jacobs <xor.gate.engineering[at]gmail[dot]com>

 Modified at: 2014-02-07
 by: Marco Serantoni <marco.serantoni[at]gmail[dot]com>

Snow Leopard
------------

Requirements
  * XCode Tools    (http://developer.apple.com/tools/xcode)
  * bzr (bazaar)
  * CMake          (http://www.cmake.org)

  The build of Kicad for OSX is now easier than before.
  The building system will download and compile the needed libraries for you
  patching them accordly to the needs.

Building Kicad with no support for Scripting
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  The building needs to know if you want a static binary or a dynamic one
  Just set ONE of those two options KICAD_BUILD_STATIC or KICAD_BUILD_DYNAMIC
  
  If you set KICAD_BUILD_DYNAMIC the building system will build all and include
  the needed libraries for each executable in its bundle

      cmake -DKICAD_BUILD_DYNAMIC=ON .
      make

Building Kicad with support for Scripting
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  Due some problems with some dependencies the build of this kind of binary is a bit 
  more complex, you should initially set KICAD_BUILD_DYNAMIC
  then issue for example

      cmake -DKICAD_BUILD_DYNAMIC=ON .
      make swig

  After successfully building you can set your KICAD_SCRIPTING* options (for example):

      cmake -DKICAD_SCRIPTING=ON -DKICAD_SCRIPTING_WXPYTHON=ON -DKICAD_SCRIPTING_MODULES=ON .
      make

  The system will build all accordling your choices and package all in the bundle
  I know bundles will be huge, but those will be autosufficient.

Building Kicad for other processors or Universal binaries
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   I wish remember you should set the processor like

       cmake -DCMAKE_OSX_ARCHITECTURES="x86_64"

   for other platforms 

       cmake -DCMAKE_OSX_ARCHITECTURES="x86_64 -arch i386"
       cmake -DCMAKE_OSX_ARCHITECTURES="x86_64 -arch i386 -arch ppc"

   I know some you should prefer use ; as separator, this will be accomplished soon
   keeping support for both the syntaxes
